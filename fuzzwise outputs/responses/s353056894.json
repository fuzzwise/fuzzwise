{
  "submission_id": "s353056894",
  "cycles": [
    {
      "test_case": "Test Case Input:\n5\n10\n3",
      "test_mutations": [
        "Test Case Input:\n10\n5\n7\n\nPREVIOUSLY GENERATED TEST CASES",
        "Test Case Input:\n5\n10\n3",
        "Test Case Input:\n10\n5\n3",
        "Test Case Input:\n10\n5\n3",
        "Test Case Input:\n10\n5\n3",
        "Test Case Input:\n10\n5\n3\n\nPREVIOUSLY GENERATED TEST CASES",
        "Test Case Input:\n5\n3\n2",
        "Test Case Input:\n0\n0\n0",
        "Test Case Input:\n10\n5\n3",
        "Test Case Input:\n5\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main class declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-Else condition: Since A (10) is greater than K (5), the if condition 'A > K' is satisfied. The statement \"A -= K;\" is covered. The else condition is not executed.\n6. System.out.print statement: always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n7. Closing Brackets: always covered.\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"a\"\n10\n3",
        "Test Case Input:\n\"a\"\n\"b\"\n\"c\"",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"5\"\n\"10\"\n\"3\"",
        "Test Case Input:\n\"5\"\n\"10\"\n\"3\"",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"Hello\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: Always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: Always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n\n5. If-else condition: Since A is greater than K, the condition \"A > K\" is true and the if block will be executed. Statement \"if (A > K) {\" is covered.\n\n6. If block execution: Since A is greater than K, the statement \"A -= K;\" will be executed. Statement \"A -= K;\" is covered.\n\n7. Statements after if block: Statements after the if block will be executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n\n8. Closing brackets: Always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>         A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n5\n0\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n-5\n10\n3",
        "Test Case Input:\n5\n10\n3",
        "Test Case Input:\nnull\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: Always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: Always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", and \"long K = sc.nextLong();\" are covered.\n\n5. if-else condition: Since A is not equal to K, the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered and statement 'A -= K;' is also covered.\n\n6. Closing Brace of if-else condition: Always covered. Closing brace '}' of the if-else condition is covered.\n\n7. Program Output: Always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n\n8. Closing Brackets: Always covered. Closing brackets of main method and class are covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nnull\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n5\n0\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n-5\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n\n5. If-Else condition: Since A (10) is greater than K (3), the if condition 'A > K' is true, and the if block will be executed. Statement \"if (A > K) {\" is covered.\n\n6. If block execution: Since A (10) is greater than K (3), the statement 'A -= K;' will be executed. Statement \"A -= K;\" is covered.\n\n7. Statements after if block: Statement \"System.out.print(A + \" \" + B);\" is covered.\n\n8. Closing Brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n5\n10\n-3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n-5\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main class declaration: Always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User input and program output: Always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-else condition: Since A is greater than K, the condition \"A > K\" is true and the if block will be executed. Statement \"if (A > K) {\" is covered.\n6. If block: Since A is greater than K, the statement \"A -= K;\" will be executed. The value of A will be updated. Statement \"A -= K;\" is covered.\n7. Else-if condition: Since A is not less than K, the else-if condition \"A < K\" is not satisfied. Statement \"else if (A < K) {\" is not covered.\n8. Statements after the if-else condition: Since the else-if condition is not satisfied, the statements \"K -= A;\", \"A = 0;\", \"B -= K;\" are not covered.\n9. System.out.print statement: Always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n10. Closing brackets: Always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n> !     A -= K;\n>     } else if (A < K) {\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n2.5\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main Class Declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method decalarion: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-Else condition: Since A > K, the if condition 'A > K' is true and the if block will be executed. Statement \"if (A > K) {\" is covered.\n6. If block: Since A > K, the statement \"A -= K;\" will be executed. Statement \"A -= K;\" is covered.\n7. Statements after If block: The else condition is not satisfied, so the statements after the if block will not be executed. Statements \"else if (A < K) {\", \"K -= A;\", \"A = 0;\", \"B -= K;\", \"}\" are not covered.\n8. Program Output: Since the if block is executed, the statement \"System.out.print(A + \" \" + B);\" will be executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n9. Closing Brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>         A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\ntrue\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main class declaration : always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output : always executed. Statements \"Scanner scanner = new Scanner(System.in);\", \"long A = scanner.nextLong();\", \"long B = scanner.nextLong();\", \"long K = scanner.nextLong();\" are covered.\n5. If-Else condition : Since A is greater than K, the if condition \"A > K\" is true and the \"if\" block will be executed. Statements \"A -= K;\" will be covered. The else condition is not satisfied, so the \"else\" block and its statements are not covered.\n6. System.out.print statement : always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n7. Closing Brackets : always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n5\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered. \n\n2. Main Class Declaration : always executed. Statement \"public class Main {\" is covered. \n\n3. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output : always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered. \n\n5. If - Else If condition : Since A is not equal to K, the first if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. \n\n6. If block execution : Since A > K, the if block will be executed. Statement 'A -= K;' is covered. \n\n7. Statements after If block : Since there is no statement after the if block, no additional coverage is achieved. \n\n8. Closing Brackets : always covered. \n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is : \n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main Class Declaration: Always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: Always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n\n5. If - Else If condition: Since A = 10 and K = 3, the condition A > K is true. So, the if block will be executed. Statement \"if (A > K) {\" is covered.\n\n6. If block: Since A = 10 and K = 3, A will be updated to A - K. Statement \"A -= K;\" is covered.\n\n7. Statements after If block: Statement \"System.out.print(A + \" \" + B);\" will be covered.\n\n8. Closing Brackets: Always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\n100\n200\n-50",
      "test_mutations": [
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\ntrue\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n5.5\n10\n3",
        "Test Case Input:\n100\n200\n-50"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main class declaration: The class declaration is always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: The main method is always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User input and program output: User input statements are always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-else condition: Since A > K, the if condition \"A > K\" is true. The if block will be executed. Statement \"A -= K;\" is covered. The else condition is not executed. Statement \"K -= A;\", \"A = 0;\", \"B -= K;\" are not covered.\n6. Print statement: The print statement is always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n7. Closing brackets: The closing brackets are always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main Class Declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If - Else If condition: Since A (10) is greater than K (3), the if condition 'A > K' is true, and the if block will be executed. Statement \"if (A > K) {\" is covered.\n6. If block contents: Since the condition A > K is true, the statement \"A -= K;\" will be executed. The else block will be skipped. Statement \"A -= K;\" is covered.\n7. Statements after if - else if block: The statements after the if - else if block will be executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n8. Closing Brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n\n5. If-Else condition: Since A > K, the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. The else condition is not satisfied, so the statements inside the else block are not covered.\n\n6. A -= K statement: Since the if condition is satisfied, the statement 'A -= K;' is executed. This statement is covered.\n\n7. Print statement: The print statement \"System.out.print(A + \" \" + B);\" is always executed. This statement is covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n5.5\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n\"10\"\n\"3\"",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: Always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User input and program output: Always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", and \"long K = sc.nextLong();\" are covered.\n\n5. If-Else condition: Since A (10) is greater than K (3), the if condition \"A > K\" is satisfied. The if block will be executed, and the else block will not be executed. Statement \"if (A > K) {\" is covered.\n\n6. If block: Statements inside the if block will be executed. Statement \"A -= K;\" is covered.\n\n7. Function call in println statement: Statements inside the println statement will be executed. Statements \"System.out.print(A + \" \" + B);\" is covered.\n\n8. Closing brackets: Always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n3. User Input and Program Output : always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n4. If-Else condition : Since A (10) is greater than K (3), the if condition 'A > K' is true and the if block will be executed. Statement \"if (A > K) {\" is covered.\n5. If block contents : Since A (10) is greater than K (3), the statement \"A -= K;\" will be executed. Statement \"A -= K;\" is covered.\n6. Statements after If block : The else if condition is not satisfied, so the else block will not be executed. Therefore, statements in the else block are not covered.\n7. Program Output : Statements \"System.out.print(A + \" \" + B);\" is always executed. It will be covered.\n8. Closing Brackets : always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>         A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main Class Declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method decalarion: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-Else condition: Since A (10) is greater than K (3), the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. The else condition is not satisfied, so the statements 'else {' and 'K -= A;' are not covered.\n6. A -= K: Since A (10) is greater than K (3), the value of A will be updated. Statement 'A -= K;' is covered.\n7. System.out.print: The statement 'System.out.print(A + \" \" + B);' will be executed.",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n1.5\n2.5\n3.5",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n-10\n20\n30",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n3. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n4. If - Else If condition: Since A is not equal to K, the if condition 'A > K' is true and the if block will be executed. Statement \"if (A > K) {\" is covered.\n5. If block contents: since A is greater than K, the statement \"A -= K;\" will be executed. Statement \"A -= K;\" is covered.\n6. Else If block contents: since A is greater than K, the else if condition 'A < K' is not satisfied. The else if block will not be executed.\n7. Statements after If - Else If condition: Statement \"System.out.print(A + \" \" + B);\" will be executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n8. Closing Brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\n2.5\n3.7\n4.2",
      "test_mutations": [
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n2.5\n3.7\n4.2"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main class declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-else condition: Since A is not equal to K, the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. The else condition is not satisfied, so the else block is not executed. Statement 'A -= K;' is covered.\n6. Program output: Statement \"System.out.print(A + \" \" + B);\" is covered.\n7. Closing brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\n2.5\n3.7\n4.2",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n2.5\n3.7\n4.2"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main Class Declaration: The main class declaration is always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: The main method declaration is always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: The user input statements and program output statement are always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\", and \"System.out.print(A + \" \" + B);\" are covered.\n\n5. If-Else condition: Since A is not equal to K, the condition \"A > K\" is true and the if block will be executed. Statement \"if (A > K) {\" is covered. \n\n6. If block execution: Since A is greater than K, statement \"A -= K;\" will be executed. \n\n7. Else-If condition: Since A is not less than K, the condition \"A < K\" is false and the else-if block will not be executed. The else block will be executed. Statement \"K -= A;\", \"A = 0;\", and \"B -= K;\" will be executed. \n\n8. Statements after if-else block: The statement \"System.out.print(A + \" \" + B);\" will be executed. \n\n9. Closing Brackets: The closing brackets of the main method and the main class will be covered. \n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is: \n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n10.5\n15.7\n3.2",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered. \n2. Main class declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-Else condition: Since A is greater than K, the if condition 'A > K' is true, and the if block will be executed. Statement \"if (A > K) {\" is covered. \n6. If block contents: Statement \"A -= K;\" is covered.\n7. Statements after if block: Statements after the if block are not executed since the if condition is satisfied. Statements \"else if (A < K) {\" and \"K -= A;\" are not covered.\n8. Else block contents: Since the if block is executed, the else block is not executed. Statements \"A = 0;\" and \"B -= K;\" are not covered.\n9. Output statement: Statement \"System.out.print(A + \" \" + B);\" is covered.\n10. Closing brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>         A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered. \n\n2. Main Class Declaration : always executed. Statement \"public class Main {\" is covered. \n\n3. Main method decalarion : always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output : always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered. \n\n5. If - Else condition : Since A is not equal to K, the if condition 'A > K' is true. Statement 'if (A > K) {' is covered and statement \"A -= K;\" is also covered. The else condition is not satisfied, so the else block is not executed. \n\n6. Program Output : Statement \"System.out.print(A + \" \" + B);\" is covered. \n\n7. Closing Brackets : always covered. \n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is : \n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n2.5\n3.7\n4.2",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n5\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main class declaration: always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User input and program output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If-Else condition: Since A is greater than K, the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. The else condition is not satisfied, so the else statement is not covered.\n6. Assignment and Arithmetic operations: Since A is greater than K, the value of A will be updated and B will remain the same. Statements \"A -= K;\" and \"System.out.print(A + \" \" + B);\" are covered.\n7. Closing Brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and the given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n> !     A -= K;\n>     } else if (A < K) {\n> !     K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n2.5\n3.7\n4.2",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n2.5\n3.7\n4.2",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main Class Declaration : always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output : always executed. Statement \"Scanner sc = new Scanner(System.in);\" is covered. \n5. Variable Declaration and Assignment : always executed. Statements \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", and \"long K = sc.nextLong();\" are covered.\n6. If - Else If condition : Since A is not less than K, the if condition 'A > K' is true. Statement 'if (A > K) {' is covered. The else if condition is not satisfied so the else if block won't be covered.\n7. Subtraction of K from A : Since A is greater than K, A is subtracted by K. Statement 'A -= K;' is covered.\n8. Program Output : always covered. Statement 'System.out.print(A + \" \" + B);' is covered.\n9. Closing Brackets : always covered.\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n2.5\n3.7\n4.2",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: Always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User input and program output: Always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n\n5. If-else condition: Since A (10) is greater than K (3), the condition \"A > K\" is true and the if block will be executed. Statement \"if (A > K) {\" is covered.\n\n6. If block execution: The statement \"A -= K;\" is executed. Statement \"A -= K;\" is covered.\n\n7. Statements after if block: Since there are no more statements after the if block, there is no further code coverage.\n\n8. Closing brackets: Always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> \n> public class Main {\n>     public static void main(String[] args) {\n>         Scanner sc = new Scanner(System.in);\n>         long A = sc.nextLong();\n>         long B = sc.nextLong();\n>         long K = sc.nextLong();\n>         if (A > K) {\n>             A -= K;\n>         } else if (A < K) {\n>             K -= A;\n>             A = 0;\n>             B -= K;\n>         }\n>         System.out.print(A + \" \" + B);\n>     }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\n5.5\n10.2\n3.7",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n10.5\n15\n3.2",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n\"10\"\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n5.5\n10.2\n3.7"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n2. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n3. User Input and Program Output : always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n4. If-Else condition : Since A is greater than K, the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. The else condition is not satisfied, so statement 'else if (A < K)' and 'K -= A;' are not covered.\n5. Statement execution within if block : Since A is greater than K, statement 'A -= K;' is executed. Statement 'A -= K;' is covered.\n6. Statement execution outside if block : Statement 'System.out.print(A + \" \" + B);' is executed. Statement 'System.out.print(A + \" \" + B);' is covered.\n7. Closing Brackets : always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is :\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n> !     A -= K;\n>     } else if (A < K) {\n>     K -= A;\n>     A = 0;\n>     B -= K;\n>     }\n> !   System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n3\n2\n\"abc\"",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n5.5\n10.2\n3.7",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main class declaration: The main class declaration is always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: The main method declaration is always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: Statements for user input and program output are always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\", and \"System.out.print(A + \" \" + B);\" are covered.\n\n5. If-Else condition: Since A (10) is greater than K (3), the if condition 'A > K' is satisfied. The statement \"A -= K;\" is covered. The else condition is not satisfied, so the statement \"K -= A;\" is not covered.\n\n6. Statements after if-else condition: Since the else condition is not satisfied, the statements inside the else block are not covered. The statements \"A = 0;\" and \"B -= K;\" are not covered.\n\n7. Closing Brackets: The closing brackets are always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given Java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main method declaration: always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n3. User Input and Program Output: always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n\n4. If-Else condition: Since A (10) is greater than K (3), the if condition 'A > K' is satisfied. Statement 'if (A > K) {' is covered. \n\n5. If block execution: Since A (10) is greater than K (3), the if block will be executed. Statement 'A -= K;' is covered. \n\n6. System.out.print statement: always executed. Statement 'System.out.print(A + \" \" + B);' is covered.\n\n7. Closing Brackets: always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n1.5\n2.5\n3.5",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements : Import statements are always executed. Statement \"import java.util.*;\" will be covered. \n\n2. Main Class Declaration : always executed. Statement \"public class Main {\" is covered. \n\n3. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output : always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered. \n\n5. If - Else if condition : Since A is not greater than K, the condition 'A > K' is not satisfied. The else if condition 'A < K' is satisfied. Statement 'if (A > K) {' is not covered. Statements 'A -= K;', 'K -= A;', 'A = 0;', and 'B -= K;' are covered.\n\n6. Program Output : always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n\n7. Closing Brackets : always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is : \n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>         A -= K;\n>     } else if (A < K) {\n>         K -= A;\n>         A = 0;\n>         B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n5.5\n10.2\n3.7",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n1. Import statements : Import statements are always executed, so \"import java.util.*;\" will be covered.\n2. Main class declaration : always executed. Statement \"public class Main {\" is covered.\n3. Main method declaration : always executed. Statement \"public static void main(String[] args) {\" is covered.\n4. User Input and Program Output : always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered.\n5. If - Else If condition : Since A (10) is greater than K (3), the if condition \"A > K\" is true, and the if block will be executed. Statement \"if (A > K) {\" is covered.\n6. If block contents : Since the if condition is true, statement \"A -= K;\" will be executed. Statement \"A -= K;\" is covered.\n7. Statements after if block : Since the if condition is true, the else if condition is skipped. Statements \"else if (A < K) {\" and \"K -= A; A = 0; B -= K;\" are not covered.\n8. Program Output : always executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n9. Closing Brackets : always covered.\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is: \n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    },
    {
      "test_case": "Test Case Input:\nabc\n10\n3",
      "test_mutations": [
        "Test Case Input:\n5.5\n10.2\n3.7",
        "Test Case Input:\ntrue\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\nabc\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3",
        "Test Case Input:\n\"abc\"\n10\n3"
      ],
      "initial_code": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    long A = sc.nextLong();\n    long B = sc.nextLong();\n    long K = sc.nextLong();\n    if (A > K) {\n      A -= K;\n    } else if (A < K) {\n      K -= A;\n      A = 0;\n      B -= K;\n    }\n    System.out.print(A + \" \" + B);\n  }\n}",
      "covered_code": "PLAN for step by step execution of the given java program and test case:\n\n1. Import statements: Import statements are always executed. Statement \"import java.util.*;\" will be covered.\n\n2. Main Class Declaration: Always executed. Statement \"public class Main {\" is covered.\n\n3. Main method declaration: Always executed. Statement \"public static void main(String[] args) {\" is covered.\n\n4. User Input and Program Output: User input statements are always executed. Statements \"Scanner sc = new Scanner(System.in);\", \"long A = sc.nextLong();\", \"long B = sc.nextLong();\", \"long K = sc.nextLong();\" are covered. Program output statement \"System.out.print(A + \" \" + B);\" is covered.\n\n5. If-Else condition: If condition \"A > K\" is not satisfied because \"A\" is 10 and \"K\" is 3. So the if block is not executed. The else if condition \"A < K\" is satisfied. Statement \"K -= A;\" is covered. Statement \"A = 0;\" is covered. Statement \"B -= K;\" is covered.\n\n6. Statements after If-Else condition: Since the else if block is executed, the statements after the else if condition will be executed. Statement \"System.out.print(A + \" \" + B);\" is covered.\n\n7. Closing Brackets: Always covered.\n\nFinal code coverage of the Java program based on its test case and given step by step reasoning for execution is:\n> import java.util.*;\n> public class Main {\n>   public static void main(String[] args) {\n>     Scanner sc = new Scanner(System.in);\n>     long A = sc.nextLong();\n>     long B = sc.nextLong();\n>     long K = sc.nextLong();\n>     if (A > K) {\n>       A -= K;\n>     } else if (A < K) {\n>       K -= A;\n>       A = 0;\n>       B -= K;\n>     }\n>     System.out.print(A + \" \" + B);\n>   }\n> }",
      "test_seed_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ],
      "cumulative_coverage": [
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">",
        ">"
      ]
    }
  ]
}